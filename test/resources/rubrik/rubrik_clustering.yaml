--- # This the configuration file for executing clustering pipeline
- schemaVersion: "1.0"
- pipelineMeta:
    customer: !Var customer_name
    type: Clustering
    run_date: !Var run_date
    run_id: !UUID
    cluster_size: 3
    features: !Var features
    notes: 'clusters on lands for more than 70K opp in amer-com'
    current_date: !Date today
    hyperparameters: null
    results: null
- stages:
    - extract.postgres:
        parameter:
          sql: "/Users/ghoshsk/src/ds/ml_pipeline/test/resources/rubrik/sql/01extract.sql"
          conn:
            parameter:
              host: localhost
              port: 15432
              dbname: postgres
              user: dna_ml_user1
              password: "dna.dna.ml%321"
        input: null
        output: raw
    - transform.column_name.upper:
        parameter: null
        input: raw
        output: raw
    - transform.dataframe.filter.string:
        parameter:
          inplace: true
          columns: ["DNA_STD_DC_OPPTY_STAGE_NAME"]
          conditions: ["DNA_STD_DC_OPPTY_STAGE_NAME": ["like r'7'"]]
        input: raw
        output: raw
    - transform.dataframe.truncate:
        parameter:
          inplace: false
          columns: ["DNA_STD_AC_ANNUAL_REVENUE", "DNA_STD_AC_NUMBER_OF_EMPLOYEES","DNA_STD_AC_INDUSTRY_GROUPS"]
          conditions: ["DNA_STD_AC_ANNUAL_REVENUE": ["> 1000000000000", "< 10000"], "DNA_STD_AC_NUMBER_OF_EMPLOYEES": ["< 1"]]
        input: raw
        output: temp
    - transform.dataframe.knnimpute:
        parameter:
          using_column: "DNA_STD_AC_INDUSTRY_GROUPS"
          on_columns: ["DNA_STD_AC_ANNUAL_REVENUE", "DNA_STD_AC_NUMBER_OF_EMPLOYEES"]
          n_neighbors: 5
        input: temp
        output: temp
    - transform.dataframe.append.column: # Add imputed columns back
        parameter:
          from_df: temp
          to_df: raw
          from_df_columns: ["DNA_STD_AC_NUMBER_OF_EMPLOYEES","DNA_STD_AC_ANNUAL_REVENUE"]
          to_df_columns: ["DNA_STD_AC_NUMBER_OF_EMPLOYEES_KNNIMPUTE", "DNA_STD_AC_ANNUAL_REVENUE_KNNIMPUTE"]
        input: null
        output: raw
    - common.add.variable: # Define set of columns required and ignored as variables
        parameter:
          variables: ['ignore_columns':['ACCOUNT_ID', 'OPPORTUNITY_ID', 'ACCOUNT_CREATED_DATE', 'OPPORTUNITY_ACCOUNT_ID', 'OPPORTUNITY_CREATED_DATE', 'OPPORTUNITY_CLOSED_DATE', 'DNA_CUSTOM_IA_START_DATE_POC', 'DNA_CUSTOM_IA_END_DATE_POC', 'OWNER_ID', 'ESTIMATED_CLOSE_DATE_C', 'ADVANCED_PAST_STAGE_1_DATE_TIME_C', 'ADVANCED_PAST_STAGE_2_DATE_TIME_C', 'CAMPAIGN_ID', 'CREATED_BY_ID', 'CURRENT_STATE_DATE_TIME_C', 'DATE_LAST_ESCALATION_STAGE_CHANGE_C', 'DAYS_SINCE_LAST_TECH_VAL_UPDATE_C', 'DEAL_REG_EXPIRATION_DATE_C', 'DEAL_REG_SUBMITTED_DATE_C', 'DEAL_UPDATES_C', 'INITIAL_CONTACT_ID_C', 'ISR_SDR_OPPTY_CREDIT_UPDATE_C', 'LAST_ACTIVITY_DATE', 'LAST_MODIFIED_BY_ID', 'LAST_MODIFIED_DATE', 'LAST_STAGE_UPDATE_DATE_C', 'LEAN_DATA_REPORTING_LAST_RUN_DATE_C', 'MANAGER_NOTE_DATE_TIME_C', 'NEXT_CLOSE_DATE_REMINDER_DATE_C', 'NEXT_REMINDER_DATE_C', 'NEXT_STEP_DATE_TIME_C', 'OPPORTUNITY_ID_18_CHARACTERS_C', 'OPPORTUNITY_LEAD_OWNER_ID_C', 'PM_UPDATE_ON_MISSING_FEATURE_C', 'PRIOR_STAGE_DATE_C', 'RISK_IDENTIFIED_C', 'RISK_IDENTIFIED_DATE_C', 'SDR_LED_CHECKED_DATE_C', 'STAGE_1_AGE_VIOLATION_DATE_C', 'STAGE_1_AGE_VIOLATION_DATE_TIME_C', 'STAGE_CHANGED_DATE_C', 'SUBSCRIPTION_END_DATE_C', 'SUBSCRIPTION_START_DATE_C', 'TERRITORY_2_ID', 'WIN_DATE_HIDDEN_C', 'USR_MANAGER_ID', 'USR_CONTACT_ID', 'DNA_CUSTOM_DC_ISR_LED', 'DNA_STD_DC_OPPTY_STAGE_NAME', 'DNA_STD_DC_LEAD_SOURCE_INBOUND', 'DNA_STD_AC_ANNUAL_REVENUE', 'DNA_STD_AC_NUMBER_OF_EMPLOYEES', 'COUNT_C', 'CUSTOMER_GOALS_AND_OBJECTIVES_C', 'DISCOVERY_GRADE_C', 'DISCOVERY_POINTS_C', 'PRODUCTS_WITH_BUNDLE_FEATURE_CLOUD_ON_C', 'QBDIALER_DIALS_C', 'SEGMENT_REVENUE_C', 'USR_BADGE_TEXT', 'USR_PARTNER_EVENTS', 'USR_PARTNER_TASKS', 'USR_PARTNER_TYPE_C', 'WHAT_COULD_WE_DO_DIFFERENTLY_C', 'WHAT_DID_WE_DO_WELL_C'], 'cat_columns': ['ACCOUNT_OWNERS_MANAGER_C', 'AGG_ACTIVITY_TYPE_C_AFTER_OPPTY', 'AGG_ACTIVITY_TYPE_C_BEFORE_OPPTY', 'AGG_ACTIVITY_TYPE_C_TOTAL', 'AGG_EVENT_TYPE_AFTER_OPPTY', 'AGG_EVENT_TYPE_BEFORE_OPPTY', 'AGG_EVENT_TYPE_TOTAL', 'AGG_MOMENTS_AFTER_OPPTY', 'AGG_MOMENTS_BEFORE_OPPTY', 'AGG_MOMENTS_TOTAL', 'AGG_TASK_SUBTYPE_AFTER_OPPTY', 'AGG_TASK_SUBTYPE_BEFORE_OPPTY', 'AGG_TASK_SUBTYPE_TOTAL', 'AREA_C', 'AREA_VP_NOTES_C', 'AREA_VP_NOTES_TIMESTAMP_C', 'CONTACT_TITLES_EVENTS', 'CONTACT_TITLES_TASKS', 'CORRECTIVE_ACTIONS_NEEDED_C', 'CORRECTIVE_ACTIONS_TAKEN_C', 'CURRENT_BACKUP_VENDOR_C', 'CURRENT_INTEREST_LEVEL_C', 'CURRENT_SOLUTION_C', 'CURRENT_STATE_C', 'CURRENT_STORAGE_VENDOR_C', 'DEAL_BAND_C', 'DEAL_DESK_JUSTIFICATION_C', 'DEAL_IMPACT_C', 'DEAL_REGISTRATION_TYPE_C', 'DEAL_REG_APPROVAL_STATUS_C', 'DEAL_REG_APPROVAL_TIMESTAMP_C', 'DECISION_CRITERIA_C', 'DECISION_PROCESS_C', 'DESCRIPTION', 'DIVISION_C', 'DNA_CUSTOM_AC_OWNER_THEATER', 'DNA_CUSTOM_DC_INCUMBENT', 'DNA_CUSTOM_DC_INCUMBENT_GROUPS', 'DNA_CUSTOM_DC_PRIMARY_COMPETITOR', 'DNA_CUSTOM_DC_PRIMARY_COMPETITOR_GROUPS', 'DNA_CUSTOM_DC_SEGMENT', 'DNA_STD_AC_INDUSTRY', 'DNA_STD_AC_INDUSTRY_GROUPS', 'DNA_STD_DC_LEAD_SOURCE', 'DNA_STD_DC_LEAD_SOURCE_CHANNEL', 'DNA_STD_DC_LEAD_SOURCE_MODE', 'DNA_STD_DC_LEAD_SOURCE_ORG', 'ESCALATION_STAGE_C', 'FISCAL', 'FUTURE_STATE_C', 'IDENTIFIED_PAIN_C', 'INDUSTRY_VALUE_C', 'ISR_LEVEL_OF_INFLUENCE_C', 'ISR_OWNER_C', 'JOB_LEVEL_C', 'KEY_FEATURE_NEEDS_C', 'LEAD_SOURCE_CAMPAIGN_DETAILS_C', 'LEAN_DATA_REPORTING_OPPORTUNITY_SOURCE_C', 'LEAN_DATA_REPORTING_WON_NUMBER_C', 'LOST_REASON_C', 'LOST_TO_C', 'LOST_TO_WON_AGAINST_C', 'MANAGER_S_NOTE_C', 'METRIC_C', 'NEEDS_C', 'NEED_C', 'NEGATIVE_CONSEQUENCES_C', 'NEW_STAGE_C', 'NEXT_STEP_C', 'NUMBER_OF_PROTECTED_MACHINES_C', 'OASIS_LAB_USAGE_C', 'OPPORTUNITY_DETAILS_C', 'OPPORTUNITY_OWNERS_MANAGER_C', 'OPPORTUNITY_RENEWAL_STATUS_C', 'OPPORTUNITY_SOURCE_C', 'OPPORTUNITY_SUB_TYPE_C', 'OPPORTUNITY_TYPE_C', 'ORIGINAL_LEAD_OWNERS_ROLE_C', 'ORIGINAL_LEAD_OWNER_C', 'ORIGINAL_LEAD_OWNER_THEATRE_C', 'ORIGINAL_LEAD_SOURCE_C', 'OTHER_COMPETITOR_FIELD_C', 'OTHER_INCUMBENT_C', 'OTHER_KEY_FEATURE_NEED_C', 'OTHER_PRIMARY_COMPETITOR_C', 'OWNERS_SUB_REGION_C', 'OWNER_AREA_C', 'OWNER_REGION_C', 'OWNER_SALES_LEVEL_C', 'OWNER_SUB_REGION_C', 'OWNER_THEATRE_C', 'PAIN_POINTS_C', 'PARTNER_C', 'PARTNER_CONNECT_C', 'PARTNER_LEVEL_OF_INVOLVEMENT_C', 'PARTNER_LOOKUP_C', 'PARTNER_PARENT_C', 'PARTNER_REP_TITLE_C', 'PARTNER_TECHNICAL_CONTRIBUTION_C', 'PHYSICAL_OPERATING_SYSTEMS_C', 'PHYSICAL_STORAGE_C', 'POC_BUY_BACK_AS_NFR_C', 'POC_CONVERSION_C', 'POC_CONVERTED_C', 'POC_HEALTH_C', 'POC_PHASE_C', 'POC_RETURN_STATUS_C', 'POC_STAGE_C', 'POSITIVE_BUSINESS_OUTCOMES_C', 'PO_NOTIFICATION_SENT_TIMESTAMP_C', 'PREVIOUS_ACCOUNT_OWNER_C', 'PREVIOUS_OWNER_C', 'PRIMARY_QUOTE_APPROVAL_STATUS_C', 'PRIMARY_STORAGE_C', 'PRODUCT_ARGUMENTS_C', 'PRODUCT_GAPS_C', 'PURCHASE_TIMEFRAME_C', 'REASON_DEAL_FELL_THROUGH_C', 'REGION_C', 'RISKS_UNCERTAINTIES_C', 'RSM_HAS_REVIEWED_REVERSE_TIMELINE_C', 'RUBRIK_SALES_ENGINEER_C', 'R_2_KMASTER_C', 'SALES_OPS_DEAL_NOTES_C', 'SALES_REGION_C', 'SIZING_ATTACHMENT_STATUS_C', 'STAGE_6_TIME_STAMP_C', 'STAGE_LOST_FROM_C', 'SUB_REGION_C', 'SUCCESS_CRITERIA_C', 'SYSTEM_MODSTAMP', 'TECHNICAL_VALIDATION_LAST_TOUCH_C', 'TECHNICAL_VALIDATION_NEXT_STEP_C', 'TECHNOLOGY_NOTES_C_C', 'THEATER_VP_NOTES_C', 'THEATER_VP_NOTES_TIMESTAMP_C', 'THEATRE_C', 'TIME_OF_LAST_STAGE_CHANGE_C', 'TLEVEL_1_C', 'TLEVEL_2_C', 'TLEVEL_3_C', 'TLEVEL_4_C', 'TYPE', 'USR_ACTIVE_EVENTS', 'USR_ACTIVE_TASKS', 'USR_BADGES_EVENTS', 'USR_BADGES_TASKS', 'USR_TITLE', 'USR_TITLES_EVENTS', 'USR_TITLES_TASKS', 'USR_USER_TYPE', 'WHAT_DIDN_T_WORK_C', 'WHAT_DID_WE_THINK_WOULD_HAPPEN_C', 'WHAT_REALLY_HAPPENED_C', 'WHAT_WAS_THE_DIFFERENCE_C', 'WHAT_WORKED_WELL_C', 'WHAT_WOULD_WE_DO_DIFFERENT_NEXT_TIME_C', 'WHY_DO_ANYTHING_C', 'WHY_NOW_C', 'WHY_RUBRIK_C', 'WIN_ALERT_SENT_TIME_STAMP_C', 'WIN_LOSS_COMMENTS_C', 'WIN_NOTES_C', 'WIN_NOTIFICATION_ADDITIONAL_INFO_C', 'WIN_REASONS_C', 'X_52_WEEK_CHALLENGE_C'], 'bool_columns': ['ACTIVE_OWNER_C', 'ADVANCED_PAST_STAGE_1_C', 'ADVANCED_PAST_STAGE_2_C', 'CONVERTED_FROM_LEAD_C', 'DNA_CUSTOM_DC_SDR_LED', 'DNA_STD_DC_END_RESULT', 'HAS_OPEN_ACTIVITY', 'HAS_OVERDUE_TASK', 'IS_CDW_C', 'IS_CDW_GLOBAL_C', 'IS_CLOSED', 'IS_DELETED', 'IS_EXCLUDED_FROM_TERRITORY_2_FILTER', 'IS_L_3_ELIGIBLE_ACCOUNT_C', 'IS_ORDER_SPLIT_C', 'IS_PRIVATE', 'LID_IS_INFLUENCED_C', 'ORIGINAL_LEAD_OWNER_ACTIVE_C', 'OUTLIER_C', 'POC_C', 'POC_OASIS_C', 'PO_RECEIVED_NOTIFICATION_SENT_C', 'PSO_SKU_ADDED_C', 'PUSHED_DEAL_C', 'RFP_C', 'STAGE_1_AGE_VIOLATION_C', 'STAGNANT_45_DAYS_C', 'STAGNANT_C', 'STAGNANT_NEW_C', 'STRATEGIC_ACCOUNT_C', 'TECHNICAL_VALIDATION_C', 'TECHNICAL_VALIDATION_COMPLETED_C', 'USR_IS_ACTIVE', 'WIN_ALERT_SENT_C'], 'one_hot_cols': [ 'PARTNER_LEVEL_OF_INVOLVEMENT_CALC_C','TECHNICAL_VALIDATION_COMPLETED_C','RFP_C','POC_C'], 'numeric_columns': ['DNA_CUSTOM_DC_CONTACTS_ACTIVE', 'DNA_CUSTOM_DC_DURATION_POC', 'DNA_CUSTOM_DC_PREV_OPPS_COUNT', 'DNA_CUSTOM_DC_PREV_OPPS_LOST_COUNT', 'DNA_STD_AC_ANNUAL_REVENUE_KNNIMPUTE', 'DNA_STD_AC_NUMBER_OF_EMPLOYEES_KNNIMPUTE', 'DNA_STD_DC_AMOUNT', 'DNA_STD_DC_EVENTS_IA_AFTER_OPPTY_COUNT', 'DNA_STD_DC_EVENTS_IA_BEFORE_OPPTY_COUNT', 'DNA_STD_DC_EVENTS_TOTAL_IA_COUNT', 'DNA_STD_DC_EVENTS_TOTAL_IA_FREQ', 'DNA_STD_DC_MKTG_IA_AFTER_OPPTY_COUNT', 'DNA_STD_DC_MKTG_IA_BEFORE_OPPTY_COUNT', 'DNA_STD_DC_MKTG_NURTURE_TIME', 'DNA_STD_DC_MKTG_TOTAL_IA_COUNT', 'DNA_STD_DC_OPPORTUNITY_ELAPSED_TIME', 'DNA_STD_DC_TASKS_IA_AFTER_OPPTY_COUNT', 'DNA_STD_DC_TASKS_IA_BEFORE_OPPTY_COUNT',  'DNA_STD_DC_TASKS_TOTAL_IA_COUNT', 'DNA_STD_DC_TOTAL_ELAPSED_TIME'], 'useful_columns': ['ACCOUNT_OWNERS_MANAGER_C', 'ACTIVE_OWNER_C', 'ADVANCED_PAST_STAGE_1_C', 'ADVANCED_PAST_STAGE_2_C', 'AGE_FORMULA_C', 'AGG_ACTIVITY_TYPE_C_AFTER_OPPTY', 'AGG_ACTIVITY_TYPE_C_BEFORE_OPPTY', 'AGG_ACTIVITY_TYPE_C_TOTAL', 'AGG_EVENT_TYPE_AFTER_OPPTY', 'AGG_EVENT_TYPE_BEFORE_OPPTY', 'AGG_EVENT_TYPE_TOTAL', 'AGG_MOMENTS_AFTER_OPPTY', 'AGG_MOMENTS_BEFORE_OPPTY', 'AGG_MOMENTS_TOTAL', 'AGG_TASK_SUBTYPE_AFTER_OPPTY', 'AGG_TASK_SUBTYPE_BEFORE_OPPTY', 'AGG_TASK_SUBTYPE_TOTAL', 'AREA_C', 'AREA_VP_NOTES_C', 'AREA_VP_NOTES_TIMESTAMP_C', 'CONTACT_TITLES_EVENTS', 'CONTACT_TITLES_TASKS', 'CONVERTED_FROM_LEAD_C', 'CORRECTIVE_ACTIONS_NEEDED_C', 'CORRECTIVE_ACTIONS_TAKEN_C', 'CURRENT_BACKUP_VENDOR_C', 'CURRENT_INTEREST_LEVEL_C', 'CURRENT_SOLUTION_C', 'CURRENT_STATE_C', 'CURRENT_STORAGE_VENDOR_C', 'DAYS_IN_BUSINESS_JUSTIFICATION_C', 'DAYS_IN_CONSENSUS_C', 'DAYS_IN_DISCOVERY_C', 'DAYS_IN_NEGOTIATE_CLOSE_C', 'DAYS_IN_PO_WITH_CHANNEL_C', 'DAYS_IN_TECHNICAL_VALIDATION_C', 'DEAL_BAND_C', 'DEAL_DESK_JUSTIFICATION_C', 'DEAL_IMPACT_C', 'DEAL_REGISTRATION_TYPE_C', 'DEAL_REG_APPROVAL_STATUS_C', 'DEAL_REG_APPROVAL_TIMESTAMP_C', 'DECISION_CRITERIA_C', 'DECISION_PROCESS_C', 'DESCRIPTION', 'DIVISION_C', 'DNA_CUSTOM_AC_OWNER_THEATER', 'DNA_CUSTOM_DC_CONTACTS_ACTIVE', 'DNA_CUSTOM_DC_DURATION_POC', 'DNA_CUSTOM_DC_INCUMBENT', 'DNA_CUSTOM_DC_INCUMBENT_GROUPS', 'DNA_CUSTOM_DC_PREV_OPPS_COUNT', 'DNA_CUSTOM_DC_PREV_OPPS_LOST_COUNT', 'DNA_CUSTOM_DC_PREV_OPPS_WON_COUNT', 'DNA_CUSTOM_DC_PRIMARY_COMPETITOR', 'DNA_CUSTOM_DC_PRIMARY_COMPETITOR_GROUPS', 'DNA_CUSTOM_DC_SDR_LED', 'DNA_CUSTOM_DC_SEGMENT', 'DNA_STD_AC_ANNUAL_REVENUE_KNNIMPUTE', 'DNA_STD_AC_INDUSTRY', 'DNA_STD_AC_INDUSTRY_GROUPS', 'DNA_STD_AC_NUMBER_OF_EMPLOYEES_KNNIMPUTE', 'DNA_STD_DC_AMOUNT', 'DNA_STD_DC_END_RESULT', 'DNA_STD_DC_EVENTS_IA_AFTER_OPPTY_COUNT', 'DNA_STD_DC_EVENTS_IA_AFTER_OPPTY_FREQ', 'DNA_STD_DC_EVENTS_IA_BEFORE_OPPTY_COUNT', 'DNA_STD_DC_EVENTS_IA_BEFORE_OPPTY_FREQ', 'DNA_STD_DC_EVENTS_TOTAL_IA_COUNT', 'DNA_STD_DC_EVENTS_TOTAL_IA_FREQ', 'DNA_STD_DC_LEAD_SOURCE', 'DNA_STD_DC_LEAD_SOURCE_CHANNEL', 'DNA_STD_DC_LEAD_SOURCE_MODE', 'DNA_STD_DC_LEAD_SOURCE_ORG', 'DNA_STD_DC_MKTG_IA_AFTER_OPPTY_COUNT', 'DNA_STD_DC_MKTG_IA_AFTER_OPPTY_FREQ', 'DNA_STD_DC_MKTG_IA_BEFORE_OPPTY_COUNT', 'DNA_STD_DC_MKTG_IA_BEFORE_OPPTY_FREQ', 'DNA_STD_DC_MKTG_NURTURE_TIME', 'DNA_STD_DC_MKTG_TOTAL_IA_COUNT', 'DNA_STD_DC_MKTG_TOTAL_IA_FREQ', 'DNA_STD_DC_OPPORTUNITY_ELAPSED_TIME', 'DNA_STD_DC_TASKS_IA_AFTER_OPPTY_COUNT', 'DNA_STD_DC_TASKS_IA_AFTER_OPPTY_FREQ', 'DNA_STD_DC_TASKS_IA_BEFORE_OPPTY_COUNT', 'DNA_STD_DC_TASKS_IA_BEFORE_OPPTY_FREQ', 'DNA_STD_DC_TASKS_TOTAL_IA_COUNT', 'DNA_STD_DC_TASKS_TOTAL_IA_FREQ', 'DNA_STD_DC_TOTAL_ELAPSED_TIME', 'ESCALATION_STAGE_C', 'FISCAL', 'FISCAL_QUARTER', 'FISCAL_YEAR', 'FUTURE_STATE_C', 'HAS_OPEN_ACTIVITY', 'HAS_OVERDUE_TASK', 'HOURS_IN_BUSINESS_JUSTIFICATION_C', 'HOURS_IN_CONSENSUS_C', 'HOURS_IN_DISCOVERY_C', 'HOURS_IN_NEGOTIATE_CLOSE_C', 'HOURS_IN_PO_WITH_CHANNEL_C', 'HOURS_IN_TECHNICAL_VALIDATION_C', 'IDENTIFIED_PAIN_C', 'INDUSTRY_VALUE_C', 'ISRCREDIT_TOTAL_C', 'ISR_LEVEL_OF_INFLUENCE_C', 'ISR_OWNER_C', 'ISR_SDR_OPPTY_CREDIT_STAGE_C', 'ISR_SDR_OPPTY_CREDIT_TOTAL_C', 'ISR_SDR_OPPTY_CREDIT_VM_COUNT_C', 'ISR_SDR_R_2_K_POINTS_C', 'ISSUE_TRACKER_COUNT_OPEN_BLOCKER_C', 'ISSUE_TRACKER_COUNT_OPEN_MAJOR_C', 'IS_CDW_C', 'IS_CDW_GLOBAL_C', 'IS_CLOSED', 'IS_DELETED', 'IS_EXCLUDED_FROM_TERRITORY_2_FILTER', 'IS_L_3_ELIGIBLE_ACCOUNT_C', 'IS_ORDER_SPLIT_C', 'IS_PRIVATE', 'JOB_LEVEL_C', 'KEY_FEATURE_NEEDS_C', 'LEAD_SOURCE_CAMPAIGN_DETAILS_C', 'LEAN_DATA_DAYS_IN_STAGE_C', 'LEAN_DATA_DAYS_TO_CLOSE_C', 'LEAN_DATA_REPORTING_OPPORTUNITY_SOURCE_C', 'LEAN_DATA_REPORTING_TOTAL_MARKETING_TOUCHES_C', 'LEAN_DATA_REPORTING_WON_NUMBER_C', 'LID_IS_INFLUENCED_C', 'LOST_REASON_C', 'LOST_TO_C', 'LOST_TO_WON_AGAINST_C', 'L_3_PRODUCT_COUNT_C', 'MANAGER_S_NOTE_C', 'METRIC_C', 'NEEDS_C', 'NEED_C', 'NEGATIVE_CONSEQUENCES_C', 'NEW_STAGE_C', 'NEXT_STEP_C', 'NO_OF_PLATFORM_PRODUCTS_C', 'NUMBER_AZURE_PRODUCTS_C', 'NUMBER_OF_CLUOD_CLUSTER_PRODUCTS_C', 'NUMBER_OF_CLUOD_ON_PRODUCTS_C', 'NUMBER_OF_INACTIVE_PRODUCTS_C', 'NUMBER_OF_NFR_PRODUCTS_C', 'NUMBER_OF_OPPORTUNITY_PRODUCTS_C', 'NUMBER_OF_PRIMARY_TECHNICAL_CONTACT_C', 'NUMBER_OF_PROTECTED_MACHINES_C', 'NUMBER_OF_PSO_PRODUCTS_C', 'NUMBER_OF_TB_C', 'OASIS_LAB_USAGE_C', 'OF_DATA_C', 'OF_GO_LINES_C', 'OF_OPPS_C', 'OF_PHYSICAL_SERVERS_C', 'OF_P_O_C_UNITS_C', 'OF_VMS_C', 'OPPORTUNITY_COUNT_C', 'OPPORTUNITY_DETAILS_C', 'OPPORTUNITY_OWNERS_MANAGER_C', 'OPPORTUNITY_RENEWAL_STATUS_C', 'OPPORTUNITY_SOURCE_C', 'OPPORTUNITY_SUB_TYPE_C', 'OPPORTUNITY_TYPE_C', 'OPP_OWNER_ACCOUNT_OWNER_C', 'ORIGINAL_LEAD_OWNERS_ROLE_C', 'ORIGINAL_LEAD_OWNER_ACTIVE_C', 'ORIGINAL_LEAD_OWNER_C', 'ORIGINAL_LEAD_OWNER_THEATRE_C', 'ORIGINAL_LEAD_SOURCE_C', 'OTHER_COMPETITOR_FIELD_C', 'OTHER_INCUMBENT_C', 'OTHER_KEY_FEATURE_NEED_C', 'OTHER_PRIMARY_COMPETITOR_C', 'OUTLIER_C', 'OWNERSHIP_CHANGE_COUNTER_C', 'OWNERS_SUB_REGION_C', 'OWNER_AREA_C', 'OWNER_REGION_C', 'OWNER_SALES_LEVEL_C', 'OWNER_SUB_REGION_C', 'OWNER_THEATRE_C', 'PAIN_POINTS_C', 'PARTNER_C', 'PARTNER_CONNECT_C', 'PARTNER_LEVEL_OF_INVOLVEMENT_C', 'PARTNER_LEVEL_OF_INVOLVEMENT_CALC_C', 'PARTNER_LOOKUP_C', 'PARTNER_PARENT_C', 'PARTNER_REP_TITLE_C', 'PARTNER_TECHNICAL_CONTRIBUTION_C', 'PHYSICAL_OPERATING_SYSTEMS_C', 'PHYSICAL_STORAGE_C', 'POCCONVERTED_C', 'POC_BUY_BACK_AS_NFR_C', 'POC_C', 'POC_CONVERSION_C', 'POC_CONVERTED_C', 'POC_HEALTH_C', 'POC_OASIS_C', 'POC_PHASE_C', 'POC_RETURN_STATUS_C', 'POC_STAGE_C', 'POSITIVE_BUSINESS_OUTCOMES_C', 'PO_NOTIFICATION_SENT_TIMESTAMP_C', 'PO_RECEIVED_NOTIFICATION_SENT_C', 'PREVIOUS_ACCOUNT_OWNER_C', 'PREVIOUS_OWNER_C', 'PRIMARY_QUOTE_APPROVAL_STATUS_C', 'PRIMARY_STORAGE_C', 'PRIMARY_STORAGE_CAPACITY_C', 'PRIMARY_STORAGE_IOPS_C', 'PRODUCT_ARGUMENTS_C', 'PRODUCT_GAPS_C', 'PSO_SERVICES_AMOUNT_C', 'PSO_SKU_ADDED_C', 'PURCHASE_TIMEFRAME_C', 'PUSHED_DEAL_C', 'PUSH_COUNTER_C', 'REASON_DEAL_FELL_THROUGH_C', 'REGION_C', 'RFP_C', 'RISKS_UNCERTAINTIES_C', 'RSM_HAS_REVIEWED_REVERSE_TIMELINE_C', 'RUBRIK_SALES_ENGINEER_C', 'R_2_KMASTER_C', 'SALES_OPS_DEAL_NOTES_C', 'SALES_REGION_C', 'SDRCREDIT_TOTAL_C', 'SIZING_ATTACHMENT_STATUS_C', 'STAGE_1_AGE_VIOLATION_C', 'STAGE_6_TIME_STAMP_C', 'STAGE_LOST_FROM_C', 'STAGNANT_45_DAYS_C', 'STAGNANT_C', 'STAGNANT_NEW_C', 'STRATEGIC_ACCOUNT_C', 'SUB_REGION_C', 'SUCCESS_CRITERIA_C', 'SYSTEM_MODSTAMP', 'TECHNICAL_VALIDATION_C', 'TECHNICAL_VALIDATION_COMPLETED_C', 'TECHNICAL_VALIDATION_LAST_TOUCH_C', 'TECHNICAL_VALIDATION_NEXT_STEP_C', 'TECHNOLOGY_NOTES_C_C', 'THEATER_VP_NOTES_C', 'THEATER_VP_NOTES_TIMESTAMP_C', 'THEATRE_C', 'TIME_OF_LAST_STAGE_CHANGE_C', 'TLEVEL_1_C', 'TLEVEL_2_C', 'TLEVEL_3_C', 'TLEVEL_4_C', 'TOTAL_OPPORTUNITY_QUANTITY', 'TYPE', 'USR_ACTIVE_EVENTS', 'USR_ACTIVE_TASKS', 'USR_BADGES_EVENTS', 'USR_BADGES_TASKS', 'USR_IS_ACTIVE', 'USR_TITLE', 'USR_TITLES_EVENTS', 'USR_TITLES_TASKS', 'USR_USER_TYPE', 'WHAT_DIDN_T_WORK_C', 'WHAT_DID_WE_THINK_WOULD_HAPPEN_C', 'WHAT_REALLY_HAPPENED_C', 'WHAT_WAS_THE_DIFFERENCE_C', 'WHAT_WORKED_WELL_C', 'WHAT_WOULD_WE_DO_DIFFERENT_NEXT_TIME_C', 'WHY_DO_ANYTHING_C', 'WHY_NOW_C', 'WHY_RUBRIK_C', 'WIN_ALERT_SENT_C', 'WIN_ALERT_SENT_TIME_STAMP_C', 'WIN_LOSS_COMMENTS_C', 'WIN_NOTES_C', 'WIN_NOTIFICATION_ADDITIONAL_INFO_C', 'WIN_REASONS_C', 'X_52_WEEK_CHALLENGE_C'],'numeric_p0': ['DNA_CUSTOM_DC_CONTACTS_ACTIVE', 'DNA_STD_AC_ANNUAL_REVENUE_KNNIMPUTE', 'DNA_STD_AC_NUMBER_OF_EMPLOYEES_KNNIMPUTE', 'DNA_STD_DC_AMOUNT', 'DNA_STD_DC_EVENTS_TOTAL_IA_COUNT', 'DNA_STD_DC_MKTG_NURTURE_TIME', 'DNA_STD_DC_MKTG_TOTAL_IA_COUNT', 'DNA_STD_DC_OPPORTUNITY_ELAPSED_TIME', 'DNA_STD_DC_TASKS_TOTAL_IA_COUNT', 'DNA_STD_DC_TOTAL_ELAPSED_TIME', 'DNA_CUSTOM_DC_PREV_OPPS_LOST_COUNT', 'DNA_CUSTOM_DC_PREV_OPPS_WON_COUNT', 'DNA_STD_DC_EVENTS_IA_AFTER_OPPTY_COUNT', 'DNA_STD_DC_EVENTS_IA_BEFORE_OPPTY_COUNT', 'DNA_STD_DC_MKTG_IA_AFTER_OPPTY_COUNT', 'DNA_STD_DC_MKTG_IA_BEFORE_OPPTY_COUNT', 'DNA_STD_DC_TASKS_IA_AFTER_OPPTY_COUNT', 'DNA_STD_DC_TASKS_IA_BEFORE_OPPTY_COUNT'], 'numeric_p1': ['DNA_CUSTOM_DC_CONTACTS_ACTIVE', 'DNA_STD_AC_ANNUAL_REVENUE_KNNIMPUTE', 'DNA_STD_AC_NUMBER_OF_EMPLOYEES_KNNIMPUTE', 'DNA_STD_DC_AMOUNT', 'DNA_STD_DC_EVENTS_TOTAL_IA_COUNT', 'DNA_STD_DC_MKTG_NURTURE_TIME', 'DNA_STD_DC_MKTG_TOTAL_IA_COUNT', 'DNA_STD_DC_OPPORTUNITY_ELAPSED_TIME', 'DNA_STD_DC_TASKS_TOTAL_IA_COUNT', 'DNA_STD_DC_TOTAL_ELAPSED_TIME', 'DNA_CUSTOM_DC_PREV_OPPS_LOST_COUNT', 'DNA_STD_DC_EVENTS_IA_AFTER_OPPTY_COUNT', 'DNA_STD_DC_EVENTS_IA_BEFORE_OPPTY_COUNT', 'DNA_STD_DC_MKTG_IA_AFTER_OPPTY_COUNT', 'DNA_STD_DC_MKTG_IA_BEFORE_OPPTY_COUNT', 'DNA_STD_DC_TASKS_IA_AFTER_OPPTY_COUNT', 'DNA_STD_DC_TASKS_IA_BEFORE_OPPTY_COUNT'], 'numeric_p2': ['DNA_CUSTOM_DC_CONTACTS_ACTIVE', 'DNA_STD_AC_ANNUAL_REVENUE_KNNIMPUTE', 'DNA_STD_AC_NUMBER_OF_EMPLOYEES_KNNIMPUTE', 'DNA_STD_DC_AMOUNT', 'DNA_STD_DC_OPPORTUNITY_ELAPSED_TIME', 'TOTAL_OPPORTUNITY_QUANTITY', 'POCCONVERTED_C', 'DAYS_IN_BUSINESS_JUSTIFICATION_C', 'DAYS_IN_CONSENSUS_C', 'DAYS_IN_DISCOVERY_C', 'DAYS_IN_NEGOTIATE_CLOSE_C', 'DAYS_IN_PO_WITH_CHANNEL_C', 'DAYS_IN_TECHNICAL_VALIDATION_C']]
        input: null
        output: null
    - transform.dataframe.one_hot_encoding:
        parameter:
          columns: one_hot_cols
          from_variable: yes
          save_ohe_column_names_as: ohe_cols
        input: raw
        output: raw
    - transform.dataframe.filter.string: # Filter by AMER-COM
        parameter:
          inplace: true
          columns: ["TLEVEL_1_C"]
          conditions: ["TLEVEL_1_C": ["== r'AMER-COM'"]]
        input: raw
        output: filtered
    - transform.dataframe.filter.numerical: # Only lands, and Only positive amounts Greater than 70K
        parameter:
          inplace: true
          columns: ["DNA_CUSTOM_DC_PREV_OPPS_WON_COUNT", "DNA_STD_DC_AMOUNT"]
          conditions: ["DNA_CUSTOM_DC_PREV_OPPS_WON_COUNT": ["== 0"], "DNA_STD_DC_AMOUNT": [">= 70000"]]
        input: filtered
        output: filtered
    - transform.dataframe.filter.compare: # Only Channel
        parameter:
          inplace: true
          conditions: [{"column":"DNA_STD_DC_LEAD_SOURCE_ORG", "comparator": "isin", "compare_with": ['Marketing', 'Channel', 'Sales']}]
        input: filtered
        output: filtered
    - transform.dataframe.reset_index:
        parameter:
          drop: true
          inplace: true
        input: filtered
        output: filtered
    - transform.simple.imputation: # imputation of numerical columns
        parameter:
          strategy: median
          columns: !Var features
          from_variable: yes
        input: filtered
        output: data_imputed
    - transform.detect.outlier: # detect outliers
        parameter:
          quantile: [0.05, 0.95]
          interpolation: "linear"
          columns: !Var features
          from_variable: yes
          outlier_column: 'sum'
        input: data_imputed
        output: outlier
    - transform.remove.outlier: # remove outlier from filtered
        parameter:
          outlier_column: 'sum'
          outlier_condition: '< 6'
          from_df: filtered
          using_outlier_df: outlier
        input: null
        output: data_sans
    - transform.remove.outlier: # remove outlier from data_imputed
        parameter:
          outlier_column: 'sum'
          outlier_condition: '< 6'
          from_df: data_imputed
          using_outlier_df: outlier
        input: null
        output: data
    - transform.dataframe.reset_index:
        parameter:
          drop: false
          inplace: true
        input: data_sans
        output: data_sans
    - transform.dataframe.reset_index:
        parameter:
          drop: false
          inplace: true
        input: data
        output: data
    - transform.dataframe.powertransform: # make data more Gaussian-like as normality is desired
        parameter:
          columns: !Var features
          from_variable: yes
          method: 'yeo-johnson'
          reshape: null
        input: data
        output: n_data
    - transform.dataframe.powertransform: # make data more Gaussian-like as normality is desired
        parameter:
          columns: ['DNA_STD_DC_AMOUNT']
          method: 'box-cox'
          reshape: [-1,1]
        input: data
        output: p_data
    - transform.dataframe.append.column: # Add DNA_STD_DC_AMOUNT columns back to n_data
        parameter:
          from_df: p_data
          to_df: n_data
          from_df_columns: ["DNA_STD_DC_AMOUNT"]
          to_df_columns: ["DNA_STD_DC_AMOUNT"]
        input: null
        output: n_data
    - transform.dataframe.append.column: # Add ohe columns from data_sans to n_data
        parameter:
          from_df: data_sans
          to_df: n_data
          from_df_columns: ohe_cols
          to_df_columns: ohe_cols
          from_df_columns_from_variable: yes
          to_df_columns_from_variable: yes
        input: null
        output: n_data
    - transform.dataframe.reset_index:
        parameter:
          drop: false
          inplace: true
        input: n_data
        output: n_data
    - transform.dataframe.boolean.filter:
        parameter:
          inplace: true
          condition_df: raw
          columns: ["DNA_STD_DC_END_RESULT"]
          conditions: ["DNA_STD_DC_END_RESULT": ["== True"]]
        input: raw
        output: raw_wins
    - transform.dataframe.boolean.filter:
        parameter:
          inplace: true
          condition_df: filtered
          columns: ["DNA_STD_DC_END_RESULT"]
          conditions: ["DNA_STD_DC_END_RESULT": ["== True"]]
        input: filtered
        output: filtered_wins
    - transform.dataframe.boolean.filter:
        parameter:
          inplace: true
          condition_df: data_sans
          columns: ["DNA_STD_DC_END_RESULT"]
          conditions: ["DNA_STD_DC_END_RESULT": ["== True"]]
        input: data_sans
        output: data_sans_wins
    - transform.dataframe.boolean.filter:
        parameter:
          inplace: true
          condition_df: data_sans
          columns: ["DNA_STD_DC_END_RESULT"]
          conditions: ["DNA_STD_DC_END_RESULT": ["== True"]]
        input: data
        output: data_wins
    - transform.dataframe.boolean.filter:
        parameter:
          inplace: true
          condition_df: data_sans
          columns: ["DNA_STD_DC_END_RESULT"]
          conditions: ["DNA_STD_DC_END_RESULT": ["== True"]]
        input: n_data
        output: n_data_wins
    - transform.dataframe.boolean.filter:
        parameter:
          inplace: true
          condition_df: raw
          columns: ["DNA_STD_DC_END_RESULT"]
          conditions: ["DNA_STD_DC_END_RESULT": ["== False"]]
        input: raw
        output: raw_loss
    - transform.dataframe.boolean.filter:
        parameter:
          inplace: true
          condition_df: filtered
          columns: ["DNA_STD_DC_END_RESULT"]
          conditions: ["DNA_STD_DC_END_RESULT": ["== False"]]
        input: filtered
        output: filtered_loss
    - transform.dataframe.boolean.filter:
        parameter:
          inplace: true
          condition_df: data_sans
          columns: ["DNA_STD_DC_END_RESULT"]
          conditions: ["DNA_STD_DC_END_RESULT": ["== False"]]
        input: data_sans
        output: data_sans_loss
    - transform.dataframe.boolean.filter:
        parameter:
          inplace: true
          condition_df: data_sans
          columns: ["DNA_STD_DC_END_RESULT"]
          conditions: ["DNA_STD_DC_END_RESULT": ["== False"]]
        input: data
        output: data_loss
    - transform.dataframe.boolean.filter:
        parameter:
          inplace: true
          condition_df: data_sans
          columns: ["DNA_STD_DC_END_RESULT"]
          conditions: ["DNA_STD_DC_END_RESULT": ["== False"]]
        input: n_data
        output: n_data_loss
    - common.union.columns:
        parameter:
          cached_variables: [!Var features, ohe_cols]
          lhs_variable_name: features
        input: null
        output: null
    - ml.clustering.kmeans:
        parameter:
          n_clusters: 3
          n_init: 1000
          random_state: 3425
          max_iter: 3000
          algorithm: 'full'
          fit_df: n_data_wins
          fit_df_columns: features
          from_variable: yes
          predict: {'classification_wins': {'df': n_data_wins,'cols': features}, 'classification_loss': {'df': n_data_loss,'cols': features}}
          update_df_with_prediction: {'data_sans_wins': {'df': data_sans_wins, 'label':'classification_label', 'using': classification_wins}, 'data_sans_loss': {'df': data_sans_loss, 'label':'classification_label', 'using': classification_loss}, 'n_data_wins': {'df': n_data_wins, 'label':'classification_label', 'using':'classification_wins'}, 'n_data_loss': {'df': n_data_loss, 'label':'classification_label', 'using':'classification_loss'}}
          score: {'silhouette_score': {'df': n_data_wins, 'label':'classification_label', 'cols': features},
                  'calinski_harabasz_score': {'df': n_data_wins, 'label':'classification_label', 'cols': features},
                  'davies_bouldin_score': {'df': n_data_wins, 'label':'classification_label', 'cols': features},
                  'update_cache': 'results'}
          mode: save
          model_path: "/Users/ghoshsk/src/ds/ml_pipeline/test/resources/rubrik/model/kmeans.pkl"
        input: null
        output: null
    - transform.dataframe.concat:
        parameter:
          dfs: [data_sans_wins, data_sans_loss]
        input: null
        output: kmeans_labeled
    - transform.dataframe.concat:
        parameter:
          dfs: [n_data_wins, n_data_loss]
        input: null
        output: n_kmeans_labeled
    - load.csv:
        parameter:
          path: "/Users/ghoshsk/src/ds/ml_pipeline/test/resources/rubrik/csv_output/clusters_lands_70K_amer_com_strategic.csv"
          index: false
        input: kmeans_labeled
        output: null
    - load.csv:
        parameter:
          path: "/Users/ghoshsk/src/ds/ml_pipeline/test/resources/rubrik/csv_output/n_clusters_lands_70K_amer_com_strategic.csv"
          index: false
        input: n_kmeans_labeled
        output: null
    - info.cluster.profiler:
        parameter:
          report_path: "/Users/ghoshsk/src/ds/ml_pipeline/test/resources/rubrik/csv_output/profile.csv"
          columns: features
          from_variable: yes
          class_label: 'classification_label'
          win_loss_column: 'DNA_STD_DC_END_RESULT'
        input: kmeans_labeled
        output: null